import numpy as np
import multiprocessing as mp
import time
import sys
import logging


logger = logging.getLogger('app')
logger.setLevel(logging.INFO)
fh = logging.FileHandler('app.log')
fh.setLevel(logging.INFO)
logger.addHandler(fh)

def target(q, delay_secs=1.0):
    while True:
        if q.qsize() > 0:
            logger.info("data detected")
            data = q.get()
            logger.info("printing data: \"{}\"".format(data))
            print(data)
            time.sleep(delay_secs)
            logger.info("sucessfully printed to console")
            logger.info("queue now contains {} data".format(q.qsize()))
    
if __name__ == '__main__':
    q = mp.Queue(100)
    args = q
    kwargs = {'delay_secs': 1.0,}
    p = mp.Process(target=target, args=(args,), kwargs=kwargs).start()
    while True:
        try:
            data = input()
            logger.info("putting data: \"{}\" into queue".format(data))
            q.put(data)
            logger.info("queue now contains {} data".format(q.qsize()))

        except KeyboardInterrupt:
            logger.info("Keyboard Interrupt detected. Joining process...")
            p.join()
            logger.info("Success. Exiting program")
            sys.exit()
